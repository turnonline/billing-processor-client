{
  "swagger": "2.0",
  "info": {
    "description": "TurnOnline.biz Ecosystem Billing Processor (Bookkeeping)",
    "version": "1.0",
    "title": "Billing Processor"
  },
    "host": "${env.ENDPOINTS_SERVICE_NAME}",
  "basePath": "/api/bill",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/bills": {
      "get": {
        "summary": "Available list of bills",
        "description": "Returns the available list of bills.",
        "operationId": "listBills",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lightList",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Date of issue from"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Date of issue to"
          }
        ],
        "responses": {
          "200": {
            "description": "The available list of bills.",
            "schema": {
              "$ref": "#/definitions/BillCollection"
            }
          },
          "401": {
            "description": "The error when the authentication credential fails.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "firebase-a9a2a51a": []
          }
        ]
      },
      "post": {
        "summary": "Create new bill",
        "operationId": "createBill",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created and updated order.",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "400": {
            "description": "The error indicates that client has made a request that server couldn’t understand. The client should not repeat the request without modifications.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The error when the authentication credential fails.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "firebase-a9a2a51a": []
          }
        ]
      }
    },
    "/v1/bills/{bill_id}": {
      "get": {
        "summary": "Return the bill",
        "operationId": "getBill",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "401": {
            "description": "The error when the authentication credential fails.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "firebase-a9a2a51a": []
          }
        ]
      },
      "put": {
        "summary": "Modify existing bill",
        "operationId": "modifyBill",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated bill",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "400": {
            "description": "The error indicates that client has made a request that server couldn’t understand. The client should not repeat the request without modifications.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The error when the authentication credential fails.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "firebase-a9a2a51a": []
          }
        ]
      },
      "delete": {
        "summary": "Delete bill",
        "operationId": "deleteBill",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "The confirmation, the accounting system profile has been deleted."
          },
          "400": {
            "description": "The error indicates that client has made a request that server couldn’t understand or some validation fails. The client should not repeat the request without modifications.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "The error when the authentication credential fails.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The error when client tries to delete accounting system profile that does not exist.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "firebase-a9a2a51a": []
          }
        ]
      },
      "parameters": [
        {
          "name": "bill_id",
          "in": "path",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ]
    }
  },
  "securityDefinitions": {
    "firebase-a9a2a51a": {
      "type": "oauth2",
      "authorizationUrl": "",
      "flow": "implicit",
            "x-google-issuer": "https://securetoken.google.com/${env.TOKEN_ISSUER}",
            "x-google-jwks_uri": "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com",
            "x-google-audiences": "${env.TOKEN_ISSUER}"
    }
  },
  "definitions": {
    "BillCollection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "Bill collection wrapper.",
          "items": {
            "$ref": "#/definitions/Bill"
          }
        }
      }
    },
    "Bill": {
      "type": "object",
      "properties": {
        "billNumber": {
          "type": "string",
          "description": "Bill order number, or in case of incoming invoice an invoice number"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date when bill record has been created. Managed solely by the service. RFC 3339"
        },
        "dateOfIssue": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the cash register document has been issued. If not provided, the current date will be used. RFC 3339"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique bill identification."
        },
        "itemName": {
          "type": "string",
          "description": "Bill name"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillItem"
          }
        },
        "modificationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the last modification of the bill resource values. Managed solely by the service. RFC 3339"
        },
        "supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "totalPrice": {
          "type": "number",
          "format": "double",
          "description": "The order total price as a sum of all checked in order items and its amount including target rounding mode. Including VAT."
        },
        "type": {
          "type": "string",
          "description": "Type of document",
          "enum": [
            "CASH_REGISTER_DOCUMENT",
            "INCOMING_INVOICE"
          ]
        },
        "storageFileName": {
          "type": "string",
          "description": "Storage file name of bill scan"
        },
        "servingUrl": {
          "type": "string",
          "description": "Serving url of bill scan"
        },
        "currency": {
          "type": "string",
          "description": "The currency alphabetic code based on the ISO 4217. If not set, the account’s default currency will be set."
        }
      }
    },
    "Supplier": {
      "type": "object",
      "properties": {
        "businessName": {
          "type": "string",
          "description": "Supplier business name."
        },
        "companyId": {
          "type": "string",
          "description": "Supplier business identification number."
        },
        "taxId": {
          "type": "string",
          "description": "Supplier tax payer identification number."
        },
        "vatId": {
          "type": "string",
          "description": "Supplier vat payer identification number."
        },
        "firstName": {
          "type": "string",
          "description": "The personal first name."
        },
        "lastName": {
          "type": "string",
          "description": "The personal last name."
        },
        "street": {
          "type": "string",
          "description": "The street and street number."
        },
        "city": {
          "type": "string",
          "description": "The address city."
        },
        "country": {
          "type": "string",
          "description": "The address ISO 3166 alpha-2 country code. It’s case insensitive."
        },
        "postcode": {
          "type": "string",
          "description": "The address post code."
        },
        "prefix": {
          "type": "string",
          "description": "The personal name prefix."
        },
        "suffix": {
          "type": "string",
          "description": "The personal name suffix."
        }
      }
    },
    "BillItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double",
          "description": "The requested amount (quantity) of this item to be invoiced."
        },
        "currency": {
          "type": "string",
          "description": "The currency alphabetic code based on the ISO 4217. If not set, the account’s default currency will be set."
        },
        "finalPrice": {
          "type": "number",
          "format": "double",
          "description": "The final price including VAT as a result of the calculation of the item price excluding VAT (VAT base), selected VAT and amount."
        },
        "finalVat": {
          "type": "string",
          "description": "The context sensitive (customer country etc) VAT code, taken from the VAT rate code book."
        },
        "id": {
          "type": "string",
          "description": "The bill item identification. Unique only with combination of the parent ID (see parent key)."
        },
        "itemName": {
          "type": "string",
          "description": "Billing item nam"
        },
        "priceExclVat": {
          "type": "number",
          "format": "double",
          "description": "The product price for a single unit (meaning amount 1.0 as a quantity). The price is excluding VAT in case company is VAT payer, otherwise price is final."
        },
        "parentKey": {
          "type": "string",
          "description": "The unique identification incl. the parent Bill identification.",
          "example": "Bill:5073302584148229::BillItem:5008221488481233"
        },
        "unit": {
          "type": "string",
          "description": "The code from the billing unit codebook - unit of measure at invoice."
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorBody"
        }
      }
    },
    "ErrorBody": {
      "type": "object",
      "required": [
        "code",
        "errors",
        "message"
      ],
      "properties": {
        "code": {
          "type": "number",
          "format": "int32",
          "description": "The HTTP status code."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorReason"
          }
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "ErrorReason": {
      "type": "object",
      "required": [
        "domain",
        "message",
        "reason"
      ],
      "properties": {
        "domain": {
          "type": "string",
          "description": "The overall scope of the error message."
        },
        "message": {
          "type": "string",
          "description": "The detailed error message."
        },
        "reason": {
          "type": "string",
          "description": "The error reason (error key)."
        }
      }
    }
  }
}
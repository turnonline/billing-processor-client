{
    "swagger": "2.0",
    "info": {
        "description": "TurnOnline.biz Ecosystem Billing Processor (Bookkeeping)",
        "version": "1.0",
        "title": "Billing Processor"
    },
    "host": "${env.ENDPOINTS_SERVICE_NAME}",
    "basePath": "/api/bill",
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1/bills": {
            "get": {
                "summary": "Available list of bills",
                "description": "Returns the available list of bills.",
                "operationId": "listBills",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "lightList",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "description": "Date of issue from"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "description": "Date of issue to"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The available list of bills.",
                        "schema": {
                            "$ref": "#/definitions/BillCollection"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            },
            "post": {
                "summary": "Create new bill",
                "operationId": "createBill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bill"
                        }
                    },
                    {
                        "name": "vnd.turnon.cloud.transaction-hashcode",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "description": "The unique bank transaction hash code as the source of data for a new bill record. If present, it helps to avoid double submission of the same request."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created and updated bill.",
                        "schema": {
                            "$ref": "#/definitions/Bill"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn’t understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        },
        "/v1/bills/{bill_id}": {
            "get": {
                "summary": "Return the bill",
                "operationId": "getBill",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Status 200",
                        "schema": {
                            "$ref": "#/definitions/Bill"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to get bill that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            },
            "put": {
                "summary": "Modify existing bill",
                "operationId": "modifyBill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated bill",
                        "schema": {
                            "$ref": "#/definitions/Bill"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn’t understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to update bill that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete bill",
                "operationId": "deleteBill",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "The confirmation, the bill has been deleted."
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn’t understand or some validation fails. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to delete bill that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            },
            "parameters": [
                {
                    "name": "bill_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }
            ]
        },
        "/v1/bills/{bill_id}/approve": {
            "post": {
                "summary": "Mark bill as approved for accountant",
                "operationId": "approvebill",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated bill"
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn’t understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to approve bill that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It’s a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or the server has timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            },
            "parameters": [
                {
                    "name": "bill_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "securityDefinitions": {
        "firebase-a9a2a51a": {
            "type": "oauth2",
            "authorizationUrl": "",
            "flow": "implicit",
            "x-google-issuer": "https://securetoken.google.com/${env.TOKEN_ISSUER}",
            "x-google-jwks_uri": "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com",
            "x-google-audiences": "${env.TOKEN_ISSUER}"
        }
    },
    "definitions": {
        "Bill": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "boolean",
                    "description": "The indication whether the bill has been approved to be sent to accountant or not."
                },
                "billNumber": {
                    "type": "string",
                    "description": "Bill (receipt) number, or in case of incoming invoice an invoice number"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A date when bill record has been created. Managed solely by the service. RFC 3339"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency alphabetic code based on the ISO 4217. If not set, the account’s default currency will be set."
                },
                "dateOfIssue": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date when the cash register document has been issued. If not provided, the current date will be used. RFC 3339"
                },
                "description": {
                    "type": "string",
                    "description": "Arbitrary description of the bill provided by the user."
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The unique bill identification."
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BillItem"
                    }
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date of the last modification of the bill resource values. Managed solely by the service. RFC 3339"
                },
                "scans": {
                    "type": "array",
                    "description": "The list of scans associated with this bill.",
                    "items": {
                        "$ref": "#/definitions/Scan"
                    }
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "totalPrice": {
                    "type": "number",
                    "format": "double",
                    "description": "The total price as a sum of all checked in bill items and its amount including target rounding mode. Including VAT."
                },
                "transactionId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The identification of the transaction within Product Billing service associated with this bill if it has been already matched."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the bill document.",
                    "enum": [
                        "RECEIPT",
                        "INVOICE"
                    ]
                }
            },
            "description": "A document that represent a scanned receipt or incoming invoice. The content of a bill (receipt) interpreted as data."
        },
        "BillCollection": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Bill collection wrapper.",
                    "items": {
                        "$ref": "#/definitions/Bill"
                    }
                }
            }
        },
        "BillItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount (quantity) of the single item at bill."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency alphabetic code based on the ISO 4217. If not set, the account’s default currency will be set."
                },
                "finalPrice": {
                    "type": "number",
                    "format": "double",
                    "description": "The final price including VAT as a result of the calculation of the item price excluding VAT (VAT base), selected VAT and amount."
                },
                "finalVat": {
                    "type": "string",
                    "description": "The context sensitive (customer country etc) VAT code, taken from the VAT rate code book."
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The bill item identification. Unique only with combination of the parent ID (see parent key)."
                },
                "itemName": {
                    "type": "string",
                    "description": "Billing item name"
                },
                "parentKey": {
                    "type": "string",
                    "description": "The unique identification incl. the parent Bill identification.",
                    "example": "Bill:5073302584148229::BillItem:5008221488481233"
                },
                "priceExclVat": {
                    "type": "number",
                    "format": "double",
                    "description": "The product price for a single unit (meaning amount 1.0 as a quantity). The price is excluding VAT in case company is VAT payer, otherwise price is final."
                },
                "unit": {
                    "type": "string",
                    "description": "The code from the billing unit codebook - unit of measure at invoice."
                }
            },
            "description": "The single row of the pricing item at a bill."
        },
        "Error": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "$ref": "#/definitions/ErrorBody"
                }
            }
        },
        "ErrorBody": {
            "type": "object",
            "required": [
                "code",
                "errors",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "number",
                    "format": "int32",
                    "description": "The HTTP status code."
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorReason"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "The error message."
                }
            }
        },
        "ErrorReason": {
            "type": "object",
            "required": [
                "domain",
                "message",
                "reason"
            ],
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The overall scope of the error message."
                },
                "message": {
                    "type": "string",
                    "description": "The detailed error message."
                },
                "reason": {
                    "type": "string",
                    "description": "The error reason (error key)."
                }
            }
        },
        "Scan": {
            "type": "object",
            "required": [
                "storageName"
            ],
            "properties": {
                "order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order number how a scanned receipt should be organised. If it's not supplied by the client, it will be numbered in the order as it was provided. Order number must be unique within list."
                },
                "servingUrl": {
                    "type": "string",
                    "description": "The full URL of the scanned receipt served from the content delivery network (CDN). Provided by the service once an image ('storageName') has been uploaded."
                },
                "storageName": {
                    "type": "string",
                    "description": "The full path to the scanned receipt. It's an identification in the underlying storage. This property acts as a list item identification."
                }
            }
        },
        "Supplier": {
            "type": "object",
            "properties": {
                "businessName": {
                    "type": "string",
                    "description": "Supplier business name."
                },
                "city": {
                    "type": "string",
                    "description": "The address city."
                },
                "companyId": {
                    "type": "string",
                    "description": "Supplier business identification number."
                },
                "country": {
                    "type": "string",
                    "description": "The address ISO 3166 alpha-2 country code. It’s case insensitive."
                },
                "postcode": {
                    "type": "string",
                    "description": "The address post code."
                },
                "street": {
                    "type": "string",
                    "description": "The street and street number."
                },
                "taxId": {
                    "type": "string",
                    "description": "Supplier tax payer identification number."
                },
                "vatId": {
                    "type": "string",
                    "description": "Supplier vat payer identification number."
                }
            }
        }
    }
}
